##              ARTIFICIAL NEURAL NETWORKS SOFTWARE
##   Neural Parser (np) :
##   environment for training and testing neural networks
##
##                        by Andreas Hadjiprocopis
##                  (livantes@soi.city.ac.uk)
##              Copyright Andreas Hadjiprocopis, 1994,2007

OPTIONS_AUTOMAKE=gnu
ACLOCAL_AMFLAGS=-I m4

bin_PROGRAMS = 		ProduceClassFourScript \
                        ProduceClassThreeScript \
                        ProduceClassTwoScript \
                        ProduceClassOneScript \
                        Random6 \
                        Levy6 \
                        Boolean6 \
                        FormatTimeSeriesData \
                        FormatVectoredData \
                        NormaliseData \
                        Notify \
                        Listen \
                        WeightedInput \
                        RealRandom \
                        Merge
##			DisplayImage

ProduceClassFourScript_SOURCES = ProduceClassFourScript.c
ProduceClassThreeScript_SOURCES = ProduceClassThreeScript.c
ProduceClassTwoScript_SOURCES = ProduceClassTwoScript.c
Random6_SOURCES = Random6.c
Levy6_SOURCES = Levy6.c
Boolean6_SOURCES = Boolean6.c
FormatTimeSeriesData_SOURCES = FormatTimeSeriesData.c
FormatVectoredData_SOURCES = FormatVectoredData.c
NormaliseData_SOURCES = NormaliseData.c
Notify_SOURCES = Notify.c
Listen_SOURCES = Listen.c
WeightedInput_SOURCES = WeightedInput.c
RealRandom_SOURCES = RealRandom.c
Merge_SOURCES = Merge.c
#DisplayImage_SOURCES = DisplayImage.c

ProduceClassFourScript_LDADD =  -lm
ProduceClassThreeScript_LDADD =  -lm
ProduceClassTwoScript_LDADD =  -lm
ProduceClassOneScript_LDADD =  -lm
Random6_LDADD =  -lm
Levy6_LDADD =  -lm
Boolean6_LDADD =  -lm
FormatTimeSeriesData_LDADD =  -lm
FormatVectoredData_LDADD =  -lm
NormaliseData_LDADD =  -lm
Notify_LDADD =  -lm
Listen_LDADD =  -lm
WeightedInput_LDADD =  -lm
RealRandom_LDADD =  -lm
#DisplayImage_LDADD = -lXext -lXaw -lXmu -lXt -lX11 -lXpm -L/usr/lib64
